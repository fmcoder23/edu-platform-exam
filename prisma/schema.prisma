generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  fullname  String   @map("fullname")
  phone     String   @map("phone")
  password  String   @map("password")
  isAdmin   Boolean  @default(false) @map("isAdmin")
  createdAt DateTime @default(now()) @map("createdAt")

  enrolledCourses courseUsers[]

  @@id([id])
  @@unique([phone])
  @@map("users")
}

model Courses {
  id          String   @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  title        String   @map("title")
  description String   @map("description")
  photo       String   @map("photo")
  createdAt   DateTime @default(now()) @map("createdAt")

  lessons       Lessons[]
  enrolledUsers courseUsers[]

  @@id([id])
  @@unique([title])
  @@map("courses")
}

model Lessons {
  id        String   @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  title     String   @map("title")
  video     String   @map("video")
  createdAt DateTime @default(now()) @map("createdAt")

  courseId String  @map("courseId") @db.Uuid
  course   Courses @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("lessons")
}

model courseUsers {
  userId   String @map("userId") @db.Uuid
  courseId String @map("courseId") @db.Uuid

  user   Users   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  course Courses @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, courseId])
  @@map("courseUsers")
}
